!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=4)}([function(e,t,n){var r=n(1),i=n(2);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);var a={insert:"head",singleton:!1};r(i,a);e.exports=i.locals||{}},function(e,t,n){"use strict";var r,i=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},a=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),o=[];function d(e){for(var t=-1,n=0;n<o.length;n++)if(o[n].identifier===e){t=n;break}return t}function c(e,t){for(var n={},r=[],i=0;i<e.length;i++){var a=e[i],c=t.base?a[0]+t.base:a[0],l=n[c]||0,s="".concat(c," ").concat(l);n[c]=l+1;var u=d(s),f={css:a[1],media:a[2],sourceMap:a[3]};-1!==u?(o[u].references++,o[u].updater(f)):o.push({identifier:s,updater:g(f,t),references:1}),r.push(s)}return r}function l(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var i=n.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var o=a(e.insert||"head");if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}return t}var s,u=(s=[],function(e,t){return s[e]=t,s.filter(Boolean).join("\n")});function f(e,t,n,r){var i=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=u(t,i);else{var a=document.createTextNode(i),o=e.childNodes;o[t]&&e.removeChild(o[t]),o.length?e.insertBefore(a,o[t]):e.appendChild(a)}}function p(e,t,n){var r=n.css,i=n.media,a=n.sourceMap;if(i?e.setAttribute("media",i):e.removeAttribute("media"),a&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var m=null,h=0;function g(e,t){var n,r,i;if(t.singleton){var a=h++;n=m||(m=l(t)),r=f.bind(null,n,a,!1),i=f.bind(null,n,a,!0)}else n=l(t),r=p.bind(null,n,t),i=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else i()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=i());var n=c(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var i=d(n[r]);o[i].references--}for(var a=c(e,t),l=0;l<n.length;l++){var s=d(n[l]);0===o[s].references&&(o[s].updater(),o.splice(s,1))}n=a}}}},function(e,t,n){(t=n(3)(!1)).push([e.i,'.dark{background:#2f302f;color:#fff}.light{background:#f5f5f5;color:#000}.green{background:#adff2f}.btn-dark{background:#000;color:#fff;border:3px solid #adff2f;border-radius:10px;font-size:22px;padding:10px 14px;width:fit-content;min-width:100px;text-align:center;margin:20px 15px;opacity:.7}.btn-dark:hover{cursor:pointer;transition:.3s cubic-bezier(0.6, 0.04, 0.98, 0.335);background:#adff2f;color:#000;font-weight:bolder;border:3px solid #000;border-radius:10px;font-size:22px;padding:10px 14px;width:fit-content;min-width:100px;text-align:center;margin:20px 15px}.btn-light{color:#000;background:#fff;border-radius:12px;font-size:22px;width:fit-content}.card{cursor:pointer}div{font-size:20px}input{width:80%;padding:8px 14px;margin:0px 5px;font-family:"Inconsolata";box-sizing:border-box;border-radius:6px}::placeholder{font-size:16px;color:gray}textarea{width:80%;padding:8px 14px;text-align:left;margin:0px 5px;border-radius:6px;box-sizing:border-box}.page-width{max-width:100vw}body{background:#adff2f;padding:0;margin:0;font-size:18px;color:#000;font-family:"Inconsolata";width:auto}.border-classic{box-shadow:5px 5px 8px rgba(0,0,0,.5);border-radius:10px}.para{font-size:20px}.fullWidth{width:100%}.contentCardHeight{height:150px;width:220px;box-sizing:border-box}.title{width:100%;text-align:left;font-weight:bold;padding:10px;margin:0}.sub-title{width:100%;font-weight:bolder;text-align:left;font-size:24px;line-height:52px}.flex{display:flex;flex-wrap:wrap}.boxing{padding:10px 10px}.mt-10{margin-top:10%}.mb-10{margin-bottom:10%}.mr-10{margin-right:10%}.ml-10{margin-left:10%}.mt-5{margin-top:5%}.mb-5{margin-bottom:5%}.mr-5{margin-right:5%}.ml-5{margin-left:5%}.min-width-20{min-width:20%}.flex-col{display:flex;flex-direction:column;flex-wrap:wrap}.justify-center{justify-content:center}.justify-right{justify-content:flex-end}.align-center{align-items:center}.text-align-center{text-align:center}',""]),e.exports=t},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var i=(o=r,d=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(d),"/*# ".concat(c," */")),a=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}var o,d,c;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(r)for(var a=0;a<this.length;a++){var o=this[a][0];null!=o&&(i[o]=!0)}for(var d=0;d<e.length;d++){var c=[].concat(e[d]);r&&i[c[0]]||(n&&(c[2]?c[2]="".concat(n," and ").concat(c[2]):c[2]=n),t.push(c))}},t}},function(e,t,n){"use strict";n.r(t);n(0);var r=function(e,t,n,r){var i=document.createElement("div");return"column"===e?i.classList.add("flex-col"):i.classList.add("flex"),t&&i.classList.add(t),"dark"===t||"green"===t?i.classList.add("dark"):i.classList.add("light"),i.style.width=r,i.style.height=n,i},i=function(e,t,n,r,i){var a=document.createElement("div");a.classList.add("mr-10","boxing");var o=document.createElement("div");o.innerText=t,o.style.lineHeight="50px";var d=null;return"textArea"===e?((d=document.createElement("textarea")).style.height="150px",d.classList.add("textarea")):d=document.createElement("input"),d.setAttribute("type",e),d.setAttribute("placeholder",n),d.addEventListener("keyup",(function(t){switch(e){case"text":i({name:t.target.value});break;case"password":i({secret:t.target.value});break;case"textArea":i({desc:t.target.value})}d.setAttribute("value",t.target.value),d.setAttribute("key",e),d.value=t.target.value})),d.style.width=r,a.appendChild(o),a.appendChild(d),a};document.addEventListener("DOMContentLoaded",(function(e){var t=document.querySelector("#root"),n=document.createElement("main");n.classList.add("page-width"),t.appendChild(n);!function(){var e=[],t={name:null,desc:null,id:e.length,secret:null,show:!1},a=function(t,n){var r=e.map((function(e,n){return n===t&&(e.show=!e.show),e}));console.log(r,"Filter"),d(r)},o=function(e){e.name?t.name=e.name:e.desc?t.desc=e.desc:t.secret=e.secret},d=function(e){u.innerHTML="";e.length&&e.map((function(e,t){return u.appendChild(function(e,t,n,r,i,a,o){var d=document.createElement("div");d.style.width="fit-content",d.style.maxWidth="25%",d.style.height="auto",d.style.margin="20px",d.classList.add("card","min-width-20","mr-5","mt-10","mb-10","flex"),d.setAttribute("card-index",r),"column"==e&&d.classList.add("flex-col","justify-center","align-center");var c=document.createElement("div");i?(c.classList.add("dark","sub-title","text-align-center"),c.innerText=a):(c.classList.add("light","sub-title","text-align-center"),c.innerText=t);var l=document.createElement("div");return l.classList.add("dark","boxing","para","fullWidth","contentCardHeight"),l.innerText=n,d.addEventListener("click",(function(e){o(r,i)})),d.appendChild(c),d.appendChild(l),d}("column",e.name,e.desc,t,e.show,e.secret,a))})),l.appendChild(u)},c=function(e,t){var n=document.createElement("h1");if(n.innerText=e,null!==t)return"dark"===t?n.classList.add("dark","title","boxing"):n.classList.add("light","title","boxing"),n}("Guess who?","dark"),l=r("flex","green","100vh","100%"),s=r("column","dark","100%","30%"),u=r("row","green","fit-content","70%"),f=r("row","dark","fit-content","100%");f.classList.add("justify-right","p-10");var p,m,h,g,x=(p="Share",m="dark",h=function(){if(t.name&&t.desc&&t.secret){t.id=e.length+1,t.show=!1,e.push(t),t={};for(var n=document.getElementsByTagName("input"),r=0;r<n.length;r++)document.getElementsByTagName("input")[r].value="";document.getElementsByTagName("textarea")[0].value=""}d(e)},(g=document.createElement("div")).innerText=p,g.classList.add("btn-"+m),g.addEventListener("click",(function(){h()})),g),b=i("text","Title,","catchy adjective!","80%",o),v=i("textArea","Description,","Special description or a secret!","80%",o),y=i("password","Who is it?","enter the victim's name","80%",o);s.appendChild(b),s.appendChild(v),s.appendChild(y),s.appendChild(f),f.appendChild(x),l.appendChild(s),l.appendChild(u),n.appendChild(c),n.appendChild(l)}()}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,